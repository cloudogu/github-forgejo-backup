/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
)

// checks if the CreateTagProtectionOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTagProtectionOption{}

// CreateTagProtectionOption CreateTagProtectionOption options for creating a tag protection
type CreateTagProtectionOption struct {
	NamePattern        *string  `json:"name_pattern,omitempty"`
	WhitelistTeams     []string `json:"whitelist_teams,omitempty"`
	WhitelistUsernames []string `json:"whitelist_usernames,omitempty"`
}

// NewCreateTagProtectionOption instantiates a new CreateTagProtectionOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTagProtectionOption() *CreateTagProtectionOption {
	this := CreateTagProtectionOption{}
	return &this
}

// NewCreateTagProtectionOptionWithDefaults instantiates a new CreateTagProtectionOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTagProtectionOptionWithDefaults() *CreateTagProtectionOption {
	this := CreateTagProtectionOption{}
	return &this
}

// GetNamePattern returns the NamePattern field value if set, zero value otherwise.
func (o *CreateTagProtectionOption) GetNamePattern() string {
	if o == nil || IsNil(o.NamePattern) {
		var ret string
		return ret
	}
	return *o.NamePattern
}

// GetNamePatternOk returns a tuple with the NamePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTagProtectionOption) GetNamePatternOk() (*string, bool) {
	if o == nil || IsNil(o.NamePattern) {
		return nil, false
	}
	return o.NamePattern, true
}

// HasNamePattern returns a boolean if a field has been set.
func (o *CreateTagProtectionOption) HasNamePattern() bool {
	if o != nil && !IsNil(o.NamePattern) {
		return true
	}

	return false
}

// SetNamePattern gets a reference to the given string and assigns it to the NamePattern field.
func (o *CreateTagProtectionOption) SetNamePattern(v string) {
	o.NamePattern = &v
}

// GetWhitelistTeams returns the WhitelistTeams field value if set, zero value otherwise.
func (o *CreateTagProtectionOption) GetWhitelistTeams() []string {
	if o == nil || IsNil(o.WhitelistTeams) {
		var ret []string
		return ret
	}
	return o.WhitelistTeams
}

// GetWhitelistTeamsOk returns a tuple with the WhitelistTeams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTagProtectionOption) GetWhitelistTeamsOk() ([]string, bool) {
	if o == nil || IsNil(o.WhitelistTeams) {
		return nil, false
	}
	return o.WhitelistTeams, true
}

// HasWhitelistTeams returns a boolean if a field has been set.
func (o *CreateTagProtectionOption) HasWhitelistTeams() bool {
	if o != nil && !IsNil(o.WhitelistTeams) {
		return true
	}

	return false
}

// SetWhitelistTeams gets a reference to the given []string and assigns it to the WhitelistTeams field.
func (o *CreateTagProtectionOption) SetWhitelistTeams(v []string) {
	o.WhitelistTeams = v
}

// GetWhitelistUsernames returns the WhitelistUsernames field value if set, zero value otherwise.
func (o *CreateTagProtectionOption) GetWhitelistUsernames() []string {
	if o == nil || IsNil(o.WhitelistUsernames) {
		var ret []string
		return ret
	}
	return o.WhitelistUsernames
}

// GetWhitelistUsernamesOk returns a tuple with the WhitelistUsernames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTagProtectionOption) GetWhitelistUsernamesOk() ([]string, bool) {
	if o == nil || IsNil(o.WhitelistUsernames) {
		return nil, false
	}
	return o.WhitelistUsernames, true
}

// HasWhitelistUsernames returns a boolean if a field has been set.
func (o *CreateTagProtectionOption) HasWhitelistUsernames() bool {
	if o != nil && !IsNil(o.WhitelistUsernames) {
		return true
	}

	return false
}

// SetWhitelistUsernames gets a reference to the given []string and assigns it to the WhitelistUsernames field.
func (o *CreateTagProtectionOption) SetWhitelistUsernames(v []string) {
	o.WhitelistUsernames = v
}

func (o CreateTagProtectionOption) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTagProtectionOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NamePattern) {
		toSerialize["name_pattern"] = o.NamePattern
	}
	if !IsNil(o.WhitelistTeams) {
		toSerialize["whitelist_teams"] = o.WhitelistTeams
	}
	if !IsNil(o.WhitelistUsernames) {
		toSerialize["whitelist_usernames"] = o.WhitelistUsernames
	}
	return toSerialize, nil
}

type NullableCreateTagProtectionOption struct {
	value *CreateTagProtectionOption
	isSet bool
}

func (v NullableCreateTagProtectionOption) Get() *CreateTagProtectionOption {
	return v.value
}

func (v *NullableCreateTagProtectionOption) Set(val *CreateTagProtectionOption) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTagProtectionOption) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTagProtectionOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTagProtectionOption(val *CreateTagProtectionOption) *NullableCreateTagProtectionOption {
	return &NullableCreateTagProtectionOption{value: val, isSet: true}
}

func (v NullableCreateTagProtectionOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTagProtectionOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
