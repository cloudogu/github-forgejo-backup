/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
	"time"
)

// checks if the EditPullRequestOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditPullRequestOption{}

// EditPullRequestOption EditPullRequestOption options when modify pull request
type EditPullRequestOption struct {
	AllowMaintainerEdit *bool `json:"allow_maintainer_edit,omitempty"`
	Assignee *string `json:"assignee,omitempty"`
	Assignees []string `json:"assignees,omitempty"`
	Base *string `json:"base,omitempty"`
	Body *string `json:"body,omitempty"`
	DueDate *time.Time `json:"due_date,omitempty"`
	Labels []int64 `json:"labels,omitempty"`
	Milestone *int64 `json:"milestone,omitempty"`
	State *string `json:"state,omitempty"`
	Title *string `json:"title,omitempty"`
	UnsetDueDate *bool `json:"unset_due_date,omitempty"`
}

// NewEditPullRequestOption instantiates a new EditPullRequestOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditPullRequestOption() *EditPullRequestOption {
	this := EditPullRequestOption{}
	return &this
}

// NewEditPullRequestOptionWithDefaults instantiates a new EditPullRequestOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditPullRequestOptionWithDefaults() *EditPullRequestOption {
	this := EditPullRequestOption{}
	return &this
}

// GetAllowMaintainerEdit returns the AllowMaintainerEdit field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetAllowMaintainerEdit() bool {
	if o == nil || IsNil(o.AllowMaintainerEdit) {
		var ret bool
		return ret
	}
	return *o.AllowMaintainerEdit
}

// GetAllowMaintainerEditOk returns a tuple with the AllowMaintainerEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetAllowMaintainerEditOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMaintainerEdit) {
		return nil, false
	}
	return o.AllowMaintainerEdit, true
}

// HasAllowMaintainerEdit returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasAllowMaintainerEdit() bool {
	if o != nil && !IsNil(o.AllowMaintainerEdit) {
		return true
	}

	return false
}

// SetAllowMaintainerEdit gets a reference to the given bool and assigns it to the AllowMaintainerEdit field.
func (o *EditPullRequestOption) SetAllowMaintainerEdit(v bool) {
	o.AllowMaintainerEdit = &v
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetAssignee() string {
	if o == nil || IsNil(o.Assignee) {
		var ret string
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetAssigneeOk() (*string, bool) {
	if o == nil || IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasAssignee() bool {
	if o != nil && !IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given string and assigns it to the Assignee field.
func (o *EditPullRequestOption) SetAssignee(v string) {
	o.Assignee = &v
}

// GetAssignees returns the Assignees field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetAssignees() []string {
	if o == nil || IsNil(o.Assignees) {
		var ret []string
		return ret
	}
	return o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetAssigneesOk() ([]string, bool) {
	if o == nil || IsNil(o.Assignees) {
		return nil, false
	}
	return o.Assignees, true
}

// HasAssignees returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasAssignees() bool {
	if o != nil && !IsNil(o.Assignees) {
		return true
	}

	return false
}

// SetAssignees gets a reference to the given []string and assigns it to the Assignees field.
func (o *EditPullRequestOption) SetAssignees(v []string) {
	o.Assignees = v
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetBase() string {
	if o == nil || IsNil(o.Base) {
		var ret string
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetBaseOk() (*string, bool) {
	if o == nil || IsNil(o.Base) {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasBase() bool {
	if o != nil && !IsNil(o.Base) {
		return true
	}

	return false
}

// SetBase gets a reference to the given string and assigns it to the Base field.
func (o *EditPullRequestOption) SetBase(v string) {
	o.Base = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *EditPullRequestOption) SetBody(v string) {
	o.Body = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *EditPullRequestOption) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetLabels() []int64 {
	if o == nil || IsNil(o.Labels) {
		var ret []int64
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetLabelsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []int64 and assigns it to the Labels field.
func (o *EditPullRequestOption) SetLabels(v []int64) {
	o.Labels = v
}

// GetMilestone returns the Milestone field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetMilestone() int64 {
	if o == nil || IsNil(o.Milestone) {
		var ret int64
		return ret
	}
	return *o.Milestone
}

// GetMilestoneOk returns a tuple with the Milestone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetMilestoneOk() (*int64, bool) {
	if o == nil || IsNil(o.Milestone) {
		return nil, false
	}
	return o.Milestone, true
}

// HasMilestone returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasMilestone() bool {
	if o != nil && !IsNil(o.Milestone) {
		return true
	}

	return false
}

// SetMilestone gets a reference to the given int64 and assigns it to the Milestone field.
func (o *EditPullRequestOption) SetMilestone(v int64) {
	o.Milestone = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *EditPullRequestOption) SetState(v string) {
	o.State = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *EditPullRequestOption) SetTitle(v string) {
	o.Title = &v
}

// GetUnsetDueDate returns the UnsetDueDate field value if set, zero value otherwise.
func (o *EditPullRequestOption) GetUnsetDueDate() bool {
	if o == nil || IsNil(o.UnsetDueDate) {
		var ret bool
		return ret
	}
	return *o.UnsetDueDate
}

// GetUnsetDueDateOk returns a tuple with the UnsetDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditPullRequestOption) GetUnsetDueDateOk() (*bool, bool) {
	if o == nil || IsNil(o.UnsetDueDate) {
		return nil, false
	}
	return o.UnsetDueDate, true
}

// HasUnsetDueDate returns a boolean if a field has been set.
func (o *EditPullRequestOption) HasUnsetDueDate() bool {
	if o != nil && !IsNil(o.UnsetDueDate) {
		return true
	}

	return false
}

// SetUnsetDueDate gets a reference to the given bool and assigns it to the UnsetDueDate field.
func (o *EditPullRequestOption) SetUnsetDueDate(v bool) {
	o.UnsetDueDate = &v
}

func (o EditPullRequestOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditPullRequestOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowMaintainerEdit) {
		toSerialize["allow_maintainer_edit"] = o.AllowMaintainerEdit
	}
	if !IsNil(o.Assignee) {
		toSerialize["assignee"] = o.Assignee
	}
	if !IsNil(o.Assignees) {
		toSerialize["assignees"] = o.Assignees
	}
	if !IsNil(o.Base) {
		toSerialize["base"] = o.Base
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.DueDate) {
		toSerialize["due_date"] = o.DueDate
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Milestone) {
		toSerialize["milestone"] = o.Milestone
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UnsetDueDate) {
		toSerialize["unset_due_date"] = o.UnsetDueDate
	}
	return toSerialize, nil
}

type NullableEditPullRequestOption struct {
	value *EditPullRequestOption
	isSet bool
}

func (v NullableEditPullRequestOption) Get() *EditPullRequestOption {
	return v.value
}

func (v *NullableEditPullRequestOption) Set(val *EditPullRequestOption) {
	v.value = val
	v.isSet = true
}

func (v NullableEditPullRequestOption) IsSet() bool {
	return v.isSet
}

func (v *NullableEditPullRequestOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditPullRequestOption(val *EditPullRequestOption) *NullableEditPullRequestOption {
	return &NullableEditPullRequestOption{value: val, isSet: true}
}

func (v NullableEditPullRequestOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditPullRequestOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


