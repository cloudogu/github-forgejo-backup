/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
)

// checks if the QuotaUsedAttachment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaUsedAttachment{}

// QuotaUsedAttachment QuotaUsedAttachment represents an attachment counting towards a user's quota
type QuotaUsedAttachment struct {
	// API URL for the attachment
	ApiUrl      *string                         `json:"api_url,omitempty"`
	ContainedIn *QuotaUsedAttachmentContainedIn `json:"contained_in,omitempty"`
	// Filename of the attachment
	Name *string `json:"name,omitempty"`
	// Size of the attachment (in bytes)
	Size *int64 `json:"size,omitempty"`
}

// NewQuotaUsedAttachment instantiates a new QuotaUsedAttachment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaUsedAttachment() *QuotaUsedAttachment {
	this := QuotaUsedAttachment{}
	return &this
}

// NewQuotaUsedAttachmentWithDefaults instantiates a new QuotaUsedAttachment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaUsedAttachmentWithDefaults() *QuotaUsedAttachment {
	this := QuotaUsedAttachment{}
	return &this
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *QuotaUsedAttachment) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedAttachment) GetApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrl) {
		return nil, false
	}
	return o.ApiUrl, true
}

// HasApiUrl returns a boolean if a field has been set.
func (o *QuotaUsedAttachment) HasApiUrl() bool {
	if o != nil && !IsNil(o.ApiUrl) {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *QuotaUsedAttachment) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetContainedIn returns the ContainedIn field value if set, zero value otherwise.
func (o *QuotaUsedAttachment) GetContainedIn() QuotaUsedAttachmentContainedIn {
	if o == nil || IsNil(o.ContainedIn) {
		var ret QuotaUsedAttachmentContainedIn
		return ret
	}
	return *o.ContainedIn
}

// GetContainedInOk returns a tuple with the ContainedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedAttachment) GetContainedInOk() (*QuotaUsedAttachmentContainedIn, bool) {
	if o == nil || IsNil(o.ContainedIn) {
		return nil, false
	}
	return o.ContainedIn, true
}

// HasContainedIn returns a boolean if a field has been set.
func (o *QuotaUsedAttachment) HasContainedIn() bool {
	if o != nil && !IsNil(o.ContainedIn) {
		return true
	}

	return false
}

// SetContainedIn gets a reference to the given QuotaUsedAttachmentContainedIn and assigns it to the ContainedIn field.
func (o *QuotaUsedAttachment) SetContainedIn(v QuotaUsedAttachmentContainedIn) {
	o.ContainedIn = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QuotaUsedAttachment) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedAttachment) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QuotaUsedAttachment) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QuotaUsedAttachment) SetName(v string) {
	o.Name = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *QuotaUsedAttachment) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedAttachment) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *QuotaUsedAttachment) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *QuotaUsedAttachment) SetSize(v int64) {
	o.Size = &v
}

func (o QuotaUsedAttachment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaUsedAttachment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiUrl) {
		toSerialize["api_url"] = o.ApiUrl
	}
	if !IsNil(o.ContainedIn) {
		toSerialize["contained_in"] = o.ContainedIn
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableQuotaUsedAttachment struct {
	value *QuotaUsedAttachment
	isSet bool
}

func (v NullableQuotaUsedAttachment) Get() *QuotaUsedAttachment {
	return v.value
}

func (v *NullableQuotaUsedAttachment) Set(val *QuotaUsedAttachment) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaUsedAttachment) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaUsedAttachment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaUsedAttachment(val *QuotaUsedAttachment) *NullableQuotaUsedAttachment {
	return &NullableQuotaUsedAttachment{value: val, isSet: true}
}

func (v NullableQuotaUsedAttachment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaUsedAttachment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
