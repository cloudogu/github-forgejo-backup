/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
)

// checks if the QuotaUsedAttachmentContainedIn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaUsedAttachmentContainedIn{}

// QuotaUsedAttachmentContainedIn Context for the attachment: URLs to the containing object
type QuotaUsedAttachmentContainedIn struct {
	// API URL for the object that contains this attachment
	ApiUrl *string `json:"api_url,omitempty"`
	// HTML URL for the object that contains this attachment
	HtmlUrl *string `json:"html_url,omitempty"`
}

// NewQuotaUsedAttachmentContainedIn instantiates a new QuotaUsedAttachmentContainedIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaUsedAttachmentContainedIn() *QuotaUsedAttachmentContainedIn {
	this := QuotaUsedAttachmentContainedIn{}
	return &this
}

// NewQuotaUsedAttachmentContainedInWithDefaults instantiates a new QuotaUsedAttachmentContainedIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaUsedAttachmentContainedInWithDefaults() *QuotaUsedAttachmentContainedIn {
	this := QuotaUsedAttachmentContainedIn{}
	return &this
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *QuotaUsedAttachmentContainedIn) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedAttachmentContainedIn) GetApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrl) {
		return nil, false
	}
	return o.ApiUrl, true
}

// HasApiUrl returns a boolean if a field has been set.
func (o *QuotaUsedAttachmentContainedIn) HasApiUrl() bool {
	if o != nil && !IsNil(o.ApiUrl) {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *QuotaUsedAttachmentContainedIn) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise.
func (o *QuotaUsedAttachmentContainedIn) GetHtmlUrl() string {
	if o == nil || IsNil(o.HtmlUrl) {
		var ret string
		return ret
	}
	return *o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedAttachmentContainedIn) GetHtmlUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HtmlUrl) {
		return nil, false
	}
	return o.HtmlUrl, true
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *QuotaUsedAttachmentContainedIn) HasHtmlUrl() bool {
	if o != nil && !IsNil(o.HtmlUrl) {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given string and assigns it to the HtmlUrl field.
func (o *QuotaUsedAttachmentContainedIn) SetHtmlUrl(v string) {
	o.HtmlUrl = &v
}

func (o QuotaUsedAttachmentContainedIn) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaUsedAttachmentContainedIn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiUrl) {
		toSerialize["api_url"] = o.ApiUrl
	}
	if !IsNil(o.HtmlUrl) {
		toSerialize["html_url"] = o.HtmlUrl
	}
	return toSerialize, nil
}

type NullableQuotaUsedAttachmentContainedIn struct {
	value *QuotaUsedAttachmentContainedIn
	isSet bool
}

func (v NullableQuotaUsedAttachmentContainedIn) Get() *QuotaUsedAttachmentContainedIn {
	return v.value
}

func (v *NullableQuotaUsedAttachmentContainedIn) Set(val *QuotaUsedAttachmentContainedIn) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaUsedAttachmentContainedIn) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaUsedAttachmentContainedIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaUsedAttachmentContainedIn(val *QuotaUsedAttachmentContainedIn) *NullableQuotaUsedAttachmentContainedIn {
	return &NullableQuotaUsedAttachmentContainedIn{value: val, isSet: true}
}

func (v NullableQuotaUsedAttachmentContainedIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaUsedAttachmentContainedIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
