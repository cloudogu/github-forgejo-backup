/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
)

// checks if the QuotaUsedSizeAssets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaUsedSizeAssets{}

// QuotaUsedSizeAssets QuotaUsedSizeAssets represents the size-based asset usage of a user
type QuotaUsedSizeAssets struct {
	// Storage size used for the user's artifacts
	Artifacts   *int64                          `json:"artifacts,omitempty"`
	Attachments *QuotaUsedSizeAssetsAttachments `json:"attachments,omitempty"`
	Packages    *QuotaUsedSizeAssetsPackages    `json:"packages,omitempty"`
}

// NewQuotaUsedSizeAssets instantiates a new QuotaUsedSizeAssets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaUsedSizeAssets() *QuotaUsedSizeAssets {
	this := QuotaUsedSizeAssets{}
	return &this
}

// NewQuotaUsedSizeAssetsWithDefaults instantiates a new QuotaUsedSizeAssets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaUsedSizeAssetsWithDefaults() *QuotaUsedSizeAssets {
	this := QuotaUsedSizeAssets{}
	return &this
}

// GetArtifacts returns the Artifacts field value if set, zero value otherwise.
func (o *QuotaUsedSizeAssets) GetArtifacts() int64 {
	if o == nil || IsNil(o.Artifacts) {
		var ret int64
		return ret
	}
	return *o.Artifacts
}

// GetArtifactsOk returns a tuple with the Artifacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedSizeAssets) GetArtifactsOk() (*int64, bool) {
	if o == nil || IsNil(o.Artifacts) {
		return nil, false
	}
	return o.Artifacts, true
}

// HasArtifacts returns a boolean if a field has been set.
func (o *QuotaUsedSizeAssets) HasArtifacts() bool {
	if o != nil && !IsNil(o.Artifacts) {
		return true
	}

	return false
}

// SetArtifacts gets a reference to the given int64 and assigns it to the Artifacts field.
func (o *QuotaUsedSizeAssets) SetArtifacts(v int64) {
	o.Artifacts = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *QuotaUsedSizeAssets) GetAttachments() QuotaUsedSizeAssetsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret QuotaUsedSizeAssetsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedSizeAssets) GetAttachmentsOk() (*QuotaUsedSizeAssetsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *QuotaUsedSizeAssets) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given QuotaUsedSizeAssetsAttachments and assigns it to the Attachments field.
func (o *QuotaUsedSizeAssets) SetAttachments(v QuotaUsedSizeAssetsAttachments) {
	o.Attachments = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *QuotaUsedSizeAssets) GetPackages() QuotaUsedSizeAssetsPackages {
	if o == nil || IsNil(o.Packages) {
		var ret QuotaUsedSizeAssetsPackages
		return ret
	}
	return *o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedSizeAssets) GetPackagesOk() (*QuotaUsedSizeAssetsPackages, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *QuotaUsedSizeAssets) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given QuotaUsedSizeAssetsPackages and assigns it to the Packages field.
func (o *QuotaUsedSizeAssets) SetPackages(v QuotaUsedSizeAssetsPackages) {
	o.Packages = &v
}

func (o QuotaUsedSizeAssets) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaUsedSizeAssets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Artifacts) {
		toSerialize["artifacts"] = o.Artifacts
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	return toSerialize, nil
}

type NullableQuotaUsedSizeAssets struct {
	value *QuotaUsedSizeAssets
	isSet bool
}

func (v NullableQuotaUsedSizeAssets) Get() *QuotaUsedSizeAssets {
	return v.value
}

func (v *NullableQuotaUsedSizeAssets) Set(val *QuotaUsedSizeAssets) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaUsedSizeAssets) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaUsedSizeAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaUsedSizeAssets(val *QuotaUsedSizeAssets) *NullableQuotaUsedSizeAssets {
	return &NullableQuotaUsedSizeAssets{value: val, isSet: true}
}

func (v NullableQuotaUsedSizeAssets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaUsedSizeAssets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
