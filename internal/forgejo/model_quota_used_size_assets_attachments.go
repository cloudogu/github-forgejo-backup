/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
)

// checks if the QuotaUsedSizeAssetsAttachments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaUsedSizeAssetsAttachments{}

// QuotaUsedSizeAssetsAttachments QuotaUsedSizeAssetsAttachments represents the size-based attachment quota usage of a user
type QuotaUsedSizeAssetsAttachments struct {
	// Storage size used for the user's issue & comment attachments
	Issues *int64 `json:"issues,omitempty"`
	// Storage size used for the user's release attachments
	Releases *int64 `json:"releases,omitempty"`
}

// NewQuotaUsedSizeAssetsAttachments instantiates a new QuotaUsedSizeAssetsAttachments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaUsedSizeAssetsAttachments() *QuotaUsedSizeAssetsAttachments {
	this := QuotaUsedSizeAssetsAttachments{}
	return &this
}

// NewQuotaUsedSizeAssetsAttachmentsWithDefaults instantiates a new QuotaUsedSizeAssetsAttachments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaUsedSizeAssetsAttachmentsWithDefaults() *QuotaUsedSizeAssetsAttachments {
	this := QuotaUsedSizeAssetsAttachments{}
	return &this
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *QuotaUsedSizeAssetsAttachments) GetIssues() int64 {
	if o == nil || IsNil(o.Issues) {
		var ret int64
		return ret
	}
	return *o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedSizeAssetsAttachments) GetIssuesOk() (*int64, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *QuotaUsedSizeAssetsAttachments) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given int64 and assigns it to the Issues field.
func (o *QuotaUsedSizeAssetsAttachments) SetIssues(v int64) {
	o.Issues = &v
}

// GetReleases returns the Releases field value if set, zero value otherwise.
func (o *QuotaUsedSizeAssetsAttachments) GetReleases() int64 {
	if o == nil || IsNil(o.Releases) {
		var ret int64
		return ret
	}
	return *o.Releases
}

// GetReleasesOk returns a tuple with the Releases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedSizeAssetsAttachments) GetReleasesOk() (*int64, bool) {
	if o == nil || IsNil(o.Releases) {
		return nil, false
	}
	return o.Releases, true
}

// HasReleases returns a boolean if a field has been set.
func (o *QuotaUsedSizeAssetsAttachments) HasReleases() bool {
	if o != nil && !IsNil(o.Releases) {
		return true
	}

	return false
}

// SetReleases gets a reference to the given int64 and assigns it to the Releases field.
func (o *QuotaUsedSizeAssetsAttachments) SetReleases(v int64) {
	o.Releases = &v
}

func (o QuotaUsedSizeAssetsAttachments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaUsedSizeAssetsAttachments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	if !IsNil(o.Releases) {
		toSerialize["releases"] = o.Releases
	}
	return toSerialize, nil
}

type NullableQuotaUsedSizeAssetsAttachments struct {
	value *QuotaUsedSizeAssetsAttachments
	isSet bool
}

func (v NullableQuotaUsedSizeAssetsAttachments) Get() *QuotaUsedSizeAssetsAttachments {
	return v.value
}

func (v *NullableQuotaUsedSizeAssetsAttachments) Set(val *QuotaUsedSizeAssetsAttachments) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaUsedSizeAssetsAttachments) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaUsedSizeAssetsAttachments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaUsedSizeAssetsAttachments(val *QuotaUsedSizeAssetsAttachments) *NullableQuotaUsedSizeAssetsAttachments {
	return &NullableQuotaUsedSizeAssetsAttachments{value: val, isSet: true}
}

func (v NullableQuotaUsedSizeAssetsAttachments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaUsedSizeAssetsAttachments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


