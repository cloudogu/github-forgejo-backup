/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
)

// checks if the QuotaUsedSizeAssetsPackages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaUsedSizeAssetsPackages{}

// QuotaUsedSizeAssetsPackages QuotaUsedSizeAssetsPackages represents the size-based package quota usage of a user
type QuotaUsedSizeAssetsPackages struct {
	// Storage suze used for the user's packages
	All *int64 `json:"all,omitempty"`
}

// NewQuotaUsedSizeAssetsPackages instantiates a new QuotaUsedSizeAssetsPackages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaUsedSizeAssetsPackages() *QuotaUsedSizeAssetsPackages {
	this := QuotaUsedSizeAssetsPackages{}
	return &this
}

// NewQuotaUsedSizeAssetsPackagesWithDefaults instantiates a new QuotaUsedSizeAssetsPackages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaUsedSizeAssetsPackagesWithDefaults() *QuotaUsedSizeAssetsPackages {
	this := QuotaUsedSizeAssetsPackages{}
	return &this
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *QuotaUsedSizeAssetsPackages) GetAll() int64 {
	if o == nil || IsNil(o.All) {
		var ret int64
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaUsedSizeAssetsPackages) GetAllOk() (*int64, bool) {
	if o == nil || IsNil(o.All) {
		return nil, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *QuotaUsedSizeAssetsPackages) HasAll() bool {
	if o != nil && !IsNil(o.All) {
		return true
	}

	return false
}

// SetAll gets a reference to the given int64 and assigns it to the All field.
func (o *QuotaUsedSizeAssetsPackages) SetAll(v int64) {
	o.All = &v
}

func (o QuotaUsedSizeAssetsPackages) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaUsedSizeAssetsPackages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.All) {
		toSerialize["all"] = o.All
	}
	return toSerialize, nil
}

type NullableQuotaUsedSizeAssetsPackages struct {
	value *QuotaUsedSizeAssetsPackages
	isSet bool
}

func (v NullableQuotaUsedSizeAssetsPackages) Get() *QuotaUsedSizeAssetsPackages {
	return v.value
}

func (v *NullableQuotaUsedSizeAssetsPackages) Set(val *QuotaUsedSizeAssetsPackages) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaUsedSizeAssetsPackages) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaUsedSizeAssetsPackages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaUsedSizeAssetsPackages(val *QuotaUsedSizeAssetsPackages) *NullableQuotaUsedSizeAssetsPackages {
	return &NullableQuotaUsedSizeAssetsPackages{value: val, isSet: true}
}

func (v NullableQuotaUsedSizeAssetsPackages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaUsedSizeAssetsPackages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
