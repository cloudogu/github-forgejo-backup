/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
	"os"
)

// checks if the RepoCreateReleaseAttachmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepoCreateReleaseAttachmentRequest{}

// RepoCreateReleaseAttachmentRequest struct for RepoCreateReleaseAttachmentRequest
type RepoCreateReleaseAttachmentRequest struct {
	// attachment to upload (this parameter is incompatible with `external_url`)
	Attachment **os.File `json:"attachment,omitempty"`
	// url to external asset (this parameter is incompatible with `attachment`)
	ExternalUrl *string `json:"external_url,omitempty"`
}

// NewRepoCreateReleaseAttachmentRequest instantiates a new RepoCreateReleaseAttachmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepoCreateReleaseAttachmentRequest() *RepoCreateReleaseAttachmentRequest {
	this := RepoCreateReleaseAttachmentRequest{}
	return &this
}

// NewRepoCreateReleaseAttachmentRequestWithDefaults instantiates a new RepoCreateReleaseAttachmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepoCreateReleaseAttachmentRequestWithDefaults() *RepoCreateReleaseAttachmentRequest {
	this := RepoCreateReleaseAttachmentRequest{}
	return &this
}

// GetAttachment returns the Attachment field value if set, zero value otherwise.
func (o *RepoCreateReleaseAttachmentRequest) GetAttachment() *os.File {
	if o == nil || IsNil(o.Attachment) {
		var ret *os.File
		return ret
	}
	return *o.Attachment
}

// GetAttachmentOk returns a tuple with the Attachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepoCreateReleaseAttachmentRequest) GetAttachmentOk() (**os.File, bool) {
	if o == nil || IsNil(o.Attachment) {
		return nil, false
	}
	return o.Attachment, true
}

// HasAttachment returns a boolean if a field has been set.
func (o *RepoCreateReleaseAttachmentRequest) HasAttachment() bool {
	if o != nil && !IsNil(o.Attachment) {
		return true
	}

	return false
}

// SetAttachment gets a reference to the given *os.File and assigns it to the Attachment field.
func (o *RepoCreateReleaseAttachmentRequest) SetAttachment(v *os.File) {
	o.Attachment = &v
}

// GetExternalUrl returns the ExternalUrl field value if set, zero value otherwise.
func (o *RepoCreateReleaseAttachmentRequest) GetExternalUrl() string {
	if o == nil || IsNil(o.ExternalUrl) {
		var ret string
		return ret
	}
	return *o.ExternalUrl
}

// GetExternalUrlOk returns a tuple with the ExternalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepoCreateReleaseAttachmentRequest) GetExternalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalUrl) {
		return nil, false
	}
	return o.ExternalUrl, true
}

// HasExternalUrl returns a boolean if a field has been set.
func (o *RepoCreateReleaseAttachmentRequest) HasExternalUrl() bool {
	if o != nil && !IsNil(o.ExternalUrl) {
		return true
	}

	return false
}

// SetExternalUrl gets a reference to the given string and assigns it to the ExternalUrl field.
func (o *RepoCreateReleaseAttachmentRequest) SetExternalUrl(v string) {
	o.ExternalUrl = &v
}

func (o RepoCreateReleaseAttachmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepoCreateReleaseAttachmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachment) {
		toSerialize["attachment"] = o.Attachment
	}
	if !IsNil(o.ExternalUrl) {
		toSerialize["external_url"] = o.ExternalUrl
	}
	return toSerialize, nil
}

type NullableRepoCreateReleaseAttachmentRequest struct {
	value *RepoCreateReleaseAttachmentRequest
	isSet bool
}

func (v NullableRepoCreateReleaseAttachmentRequest) Get() *RepoCreateReleaseAttachmentRequest {
	return v.value
}

func (v *NullableRepoCreateReleaseAttachmentRequest) Set(val *RepoCreateReleaseAttachmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRepoCreateReleaseAttachmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRepoCreateReleaseAttachmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepoCreateReleaseAttachmentRequest(val *RepoCreateReleaseAttachmentRequest) *NullableRepoCreateReleaseAttachmentRequest {
	return &NullableRepoCreateReleaseAttachmentRequest{value: val, isSet: true}
}

func (v NullableRepoCreateReleaseAttachmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepoCreateReleaseAttachmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


