/*
Forgejo API

This documentation describes the Forgejo API.

API version: 12.0.1+gitea-1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package forgejo

import (
	"encoding/json"
	"time"
)

// checks if the TagProtection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagProtection{}

// TagProtection TagProtection represents a tag protection
type TagProtection struct {
	CreatedAt          *time.Time `json:"created_at,omitempty"`
	Id                 *int64     `json:"id,omitempty"`
	NamePattern        *string    `json:"name_pattern,omitempty"`
	UpdatedAt          *time.Time `json:"updated_at,omitempty"`
	WhitelistTeams     []string   `json:"whitelist_teams,omitempty"`
	WhitelistUsernames []string   `json:"whitelist_usernames,omitempty"`
}

// NewTagProtection instantiates a new TagProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagProtection() *TagProtection {
	this := TagProtection{}
	return &this
}

// NewTagProtectionWithDefaults instantiates a new TagProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagProtectionWithDefaults() *TagProtection {
	this := TagProtection{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TagProtection) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagProtection) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TagProtection) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *TagProtection) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TagProtection) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagProtection) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TagProtection) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TagProtection) SetId(v int64) {
	o.Id = &v
}

// GetNamePattern returns the NamePattern field value if set, zero value otherwise.
func (o *TagProtection) GetNamePattern() string {
	if o == nil || IsNil(o.NamePattern) {
		var ret string
		return ret
	}
	return *o.NamePattern
}

// GetNamePatternOk returns a tuple with the NamePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagProtection) GetNamePatternOk() (*string, bool) {
	if o == nil || IsNil(o.NamePattern) {
		return nil, false
	}
	return o.NamePattern, true
}

// HasNamePattern returns a boolean if a field has been set.
func (o *TagProtection) HasNamePattern() bool {
	if o != nil && !IsNil(o.NamePattern) {
		return true
	}

	return false
}

// SetNamePattern gets a reference to the given string and assigns it to the NamePattern field.
func (o *TagProtection) SetNamePattern(v string) {
	o.NamePattern = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TagProtection) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagProtection) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TagProtection) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *TagProtection) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetWhitelistTeams returns the WhitelistTeams field value if set, zero value otherwise.
func (o *TagProtection) GetWhitelistTeams() []string {
	if o == nil || IsNil(o.WhitelistTeams) {
		var ret []string
		return ret
	}
	return o.WhitelistTeams
}

// GetWhitelistTeamsOk returns a tuple with the WhitelistTeams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagProtection) GetWhitelistTeamsOk() ([]string, bool) {
	if o == nil || IsNil(o.WhitelistTeams) {
		return nil, false
	}
	return o.WhitelistTeams, true
}

// HasWhitelistTeams returns a boolean if a field has been set.
func (o *TagProtection) HasWhitelistTeams() bool {
	if o != nil && !IsNil(o.WhitelistTeams) {
		return true
	}

	return false
}

// SetWhitelistTeams gets a reference to the given []string and assigns it to the WhitelistTeams field.
func (o *TagProtection) SetWhitelistTeams(v []string) {
	o.WhitelistTeams = v
}

// GetWhitelistUsernames returns the WhitelistUsernames field value if set, zero value otherwise.
func (o *TagProtection) GetWhitelistUsernames() []string {
	if o == nil || IsNil(o.WhitelistUsernames) {
		var ret []string
		return ret
	}
	return o.WhitelistUsernames
}

// GetWhitelistUsernamesOk returns a tuple with the WhitelistUsernames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagProtection) GetWhitelistUsernamesOk() ([]string, bool) {
	if o == nil || IsNil(o.WhitelistUsernames) {
		return nil, false
	}
	return o.WhitelistUsernames, true
}

// HasWhitelistUsernames returns a boolean if a field has been set.
func (o *TagProtection) HasWhitelistUsernames() bool {
	if o != nil && !IsNil(o.WhitelistUsernames) {
		return true
	}

	return false
}

// SetWhitelistUsernames gets a reference to the given []string and assigns it to the WhitelistUsernames field.
func (o *TagProtection) SetWhitelistUsernames(v []string) {
	o.WhitelistUsernames = v
}

func (o TagProtection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagProtection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NamePattern) {
		toSerialize["name_pattern"] = o.NamePattern
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.WhitelistTeams) {
		toSerialize["whitelist_teams"] = o.WhitelistTeams
	}
	if !IsNil(o.WhitelistUsernames) {
		toSerialize["whitelist_usernames"] = o.WhitelistUsernames
	}
	return toSerialize, nil
}

type NullableTagProtection struct {
	value *TagProtection
	isSet bool
}

func (v NullableTagProtection) Get() *TagProtection {
	return v.value
}

func (v *NullableTagProtection) Set(val *TagProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableTagProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableTagProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagProtection(val *TagProtection) *NullableTagProtection {
	return &NullableTagProtection{value: val, isSet: true}
}

func (v NullableTagProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
